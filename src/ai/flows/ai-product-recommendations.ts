// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered product recommendations based on browsing history.
 *
 * - getProductRecommendations - A function that retrieves product recommendations.
 * - GetProductRecommendationsInput - The input type for the getProductRecommendations function.
 * - GetProductRecommendationsOutput - The return type for the getProductRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetProductRecommendationsInputSchema = z.object({
  browsingHistory: z
    .string()
    .describe('The user browsing history, example: sofa,table,chair'),
});

export type GetProductRecommendationsInput = z.infer<
  typeof GetProductRecommendationsInputSchema
>;

const GetProductRecommendationsOutputSchema = z.object({
  productRecommendations: z
    .string()
    .describe("A list of product recommendations, example: lamp,rug,coffee table."),
});

export type GetProductRecommendationsOutput = z.infer<
  typeof GetProductRecommendationsOutputSchema
>;

export async function getProductRecommendations(
  input: GetProductRecommendationsInput
): Promise<GetProductRecommendationsOutput> {
  return getProductRecommendationsFlow(input);
}

const productRecommendationsPrompt = ai.definePrompt({
  name: 'productRecommendationsPrompt',
  input: {schema: GetProductRecommendationsInputSchema},
  output: {schema: GetProductRecommendationsOutputSchema},
  prompt: `You are an expert in furniture and interior design. Based on the
user's browsing history, you will provide a list of product recommendations
that are related and complementary to the items in their history. The
recommendations should enhance their shopping experience and help them discover
new items they might be interested in.

Browsing History: {{{browsingHistory}}}

Product Recommendations:`, // Ensure the output is a comma-separated list
});

const getProductRecommendationsFlow = ai.defineFlow(
  {
    name: 'getProductRecommendationsFlow',
    inputSchema: GetProductRecommendationsInputSchema,
    outputSchema: GetProductRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await productRecommendationsPrompt(input);
    return output!;
  }
);
