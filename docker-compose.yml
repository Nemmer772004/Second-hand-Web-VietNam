services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=luxhome
    networks:
      - studio_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - PORT=9002
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - studio_network

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    depends_on:
      - api-gateway
    networks:
      - studio_network

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - AUTH_SERVICE_URL=http://auth-service:3006
      - PRODUCT_SERVICE_URL=http://product-service:3001
      - CATEGORY_SERVICE_URL=http://category-service:3002
      - ORDER_SERVICE_URL=http://order-service:3003
      - USER_SERVICE_URL=http://user-service:3004
      - CART_SERVICE_URL=http://cart-service:3007
      - CORS_ORIGIN=http://localhost:9002,http://localhost:3005
      - JWT_SECRET=your_jwt_secret_key
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/luxhome?retryWrites=true&w=majority&appName=Cluster0
    depends_on:
      - product-service
      - category-service
      - order-service
      - user-service
      - cart-service
    networks:
      - studio_network


  product-service:
    build:
      context: ./backend/services/product-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - JWT_SECRET=your_jwt_secret_key
      - CORS_ORIGIN=http://localhost:9002,http://localhost:3005,http://localhost:4000
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on: []
    networks:
      - studio_network
    restart: unless-stopped

  category-service:
    build:
      context: ./backend/services/category-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    depends_on: []
    networks:
      - studio_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build:
      context: ./backend/services/order-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    depends_on: []
    networks:
      - studio_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3003/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - JWT_SECRET=your_jwt_secret_key
    depends_on: []
    networks:
      - studio_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3004/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  cart-service:
    build:
      context: ./backend/services/cart-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - PORT=3007
      - MONGODB_URI=mongodb+srv://nemmer:nemmer@cluster0.i2pm9zb.mongodb.net/luxhome?retryWrites=true&w=majority&appName=Cluster0
      - PRODUCT_SERVICE_HOST=product-service
      - PRODUCT_SERVICE_PORT=3001
      - NODE_ENV=development
    depends_on:
      product-service:
        condition: service_healthy
    networks:
      - studio_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3007/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  studio_network:
    driver: bridge

volumes:
  mongodb_data:
